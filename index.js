(()=>{"use strict";const t=[{id:0,name:"First level",map:[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,3,0,3,0,0,1,1,1,2,1,1,1,1,1,2,1,1,1,2,1,0,0,0,0,0,0,0,0,1],[1,0,0,3,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1],[1,0,0,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,3,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[1,0,0,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,3,3,3,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[1,0,0,0,0,0,0,0,0,3,3,3,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,3,3,3,0,0,3,3,3,0,0,0,0,0,0,0,0,0,3,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,3,3,3,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,4,0,0,4,2,0,2,2,2,2,2,2,2,2,0,2,4,4,0,0,4,0,0,0,0,0,0,0,1],[1,0,0,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,0,0,0,0,1],[1,0,0,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,0,0,0,0,1],[1,0,0,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,4,0,0,0,0,0,0,0,1],[1,0,0,4,3,3,4,2,2,2,2,2,2,2,2,2,2,2,2,2,4,3,3,4,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]]}];class e{constructor(t){this.id=t,this.pos={x:0,y:0},this.speed=0,this.moveSpeed=0,this.rotation=0,this.direction=0,this.rotationSpeed=0}}class i extends e{constructor(t){super(t),this.id=t,this.pos={x:16,y:10},this.speed=0,this.moveSpeed=.05,this.rotation=0,this.direction=0,this.rotationSpeed=6*Math.PI/1800}}class s{constructor(){this.stripWidth=2,this.screenStrips=[],this.screen=document.createElement("div"),this.width=window.innerWidth,this.height=window.innerHeight,this.screen.id="screen",document.body.prepend(this.screen),this.init()}init(){const t=document.createElement("div");t.id="floor";const e=document.createElement("div");e.id="ceiling";const i=document.createElement("div");i.id="level";const s=document.createElement("div");s.id="hand",this.screen.appendChild(t),this.screen.appendChild(e),this.screen.appendChild(i),this.screen.appendChild(s);for(let t=0;t<this.width;t+=this.stripWidth){const e=document.createElement("div");e.style.position="absolute",e.style.left=t+"px",e.style.width=this.stripWidth+"px",e.style.height="0px",e.style.overflow="hidden",e.style.backgroundColor="magenta";const s=new Image;s.src="public/walls.png",s.style.position="absolute",s.style.left="0px",e.appendChild(s),e.img=s,this.screenStrips.push(e),i.appendChild(e)}}drawRay(){}castSingleRay(){}drawMiniMap(){}updateMiniMap(){}}var a;!function(t){t[t.Playing=0]="Playing",t[t.GameOver=1]="GameOver",t[t.Paused=2]="Paused",t[t.Inventory=3]="Inventory",t[t.Trading=4]="Trading",t[t.MainMenu=5]="MainMenu"}(a||(a={}));const h=document.querySelector("#miniMap"),r=document.querySelector("#miniMapObjects");let n=0;const o=60*Math.PI/180/2,l=Math.ceil(160),p=160/Math.tan(o),d=2*Math.PI;let c=[],y=[],m=[],u=[];const v=document.querySelector("#debugScreen");const M=new class{constructor(){this.state="mainmenu",this.mapWidth=0,this.mapHeight=0,this.drawMiniMap=()=>{h.width=8*this.mapWidth,h.height=8*this.mapHeight,h.style.width=8*this.mapWidth+"px";const t=h.getContext("2d");for(let e=0;e<this.mapHeight;e++)for(let i=0;i<this.mapWidth;i++)this.level.map[e][i]>0&&(t.fillStyle="black",t.fillRect(8*i,8*e,8,8))},this.updateMiniMap=()=>{r.width=8*this.mapWidth,r.height=8*this.mapHeight;const t=r.getContext("2d");t.clearRect(0,0,h.width,h.height),t.fillStyle="yellowgreen",t.fillRect(8*this.player.pos.x-2,8*this.player.pos.y-2,4,4),t.beginPath(),t.moveTo(8*this.player.pos.x,8*this.player.pos.y),t.lineTo(8*(this.player.pos.x+4*Math.cos(this.player.rotation)),8*(this.player.pos.y+4*Math.sin(this.player.rotation))),t.closePath(),t.stroke()},this.player=new i("player"),this.renderer=new s,this.state="mainmenu",this.level=t[0],this.setup()}initSprites(){y=[];for(var t=0;t<this.level.map.length;t++)y[t]=[];for(var e=0;e<m.length;e++){var i=m[e],s=u[i.type],a=document.createElement("img");a.src=s.img,a.style.display="none",a.style.position="absolute",i.visible=!1,i.block=s.block,i.img=a,y[i.y][i.x]=i,this.renderer.screen.appendChild(a)}}castRays(){let t=0;for(let e=0;e<l;e++){const i=2*(-l/2+e),s=Math.sqrt(i*i+p*p),a=Math.asin(i/s);this.castSingleRay(this.player.rotation+a,t++)}}castSingleRay(t,e){(t%=d)<0&&(t+=d);var i=t>.75*d||t<.25*d,s=t<0||t>Math.PI,a=0,h=Math.sin(t),r=Math.cos(t),n=0;let o=0,l=0;var m=0;for(var u=i?1:-1,v=u*(x=h/r),M=i?Math.ceil(this.player.pos.x):Math.floor(this.player.pos.x),g=this.player.pos.y+(M-this.player.pos.x)*x;M>=0&&M<this.mapWidth&&g>=0&&g<this.mapHeight;){var f=M+(i?0:-1),w=g>>0;try{y[w][f]&&!y[w][f].visible&&(y[w][f].visible=!0,c.push(y[w][f]))}catch(t){}if(this.level.map[w][f]>0){let t=M-this.player.pos.x,e=g-this.player.pos.y;n=t*t+e*e,a=this.level.map[w][f],m=g%1,i||(m=1-m),M,g,o=f,l=w,!0;break}M+=u,g+=v}var x,b=s?-1:1,S=b*(x=r/h);for(g=s?Math.floor(this.player.pos.y):Math.ceil(this.player.pos.y),M=this.player.pos.x+(g-this.player.pos.y)*x;M>=0&&M<this.mapWidth&&g>=0&&g<this.mapHeight;){w=Math.floor(g+(s?-1:0)),f=M>>0;try{y[w][f]&&!y[w][f].visible&&(y[w][f].visible=!0,c.push(y[w][f]))}catch(t){}if(this.level.map[w][f]>0){var k=M-this.player.pos.x,P=g-this.player.pos.y,W=k*k+P*P;(!n||W<n)&&(n=W,M,g,l=w,o=f,a=this.level.map[w][f],m=M%1,s&&(m=1-m));break}M+=S,g+=b}if(n){var E=this.renderer.screenStrips[e];n=Math.sqrt(n),n*=Math.cos(this.player.rotation-t);var I=Math.round(p/n),R=2*I,C=Math.round((200-I)/2);let i=I;E.style.height=i+"px",E.style.top=C+"px",E.img.style.height=Math.floor(4*I)+"px",E.img.style.width=Math.floor(2*R)+"px",E.img.style.top=-Math.floor(I*(a-1))+"px";var K=Math.round(m*R);K>R-2&&(K=R-2),E.img.style.left=-K+"px"}}bindKeys(){const t=document.querySelector("#hand");document.addEventListener("mousemove",(t=>{const e=t.clientX-window.innerWidth/2;this.player.rotation=e/320*2*Math.PI})),document.addEventListener("keydown",(e=>{switch(e.code){case"KeyW":this.player.speed=1,t.style.animation="walk 1.5s infinite";break;case"KeyS":this.player.speed=-1,t.style.animation="walk 1.5s infinite";break;case"KeyA":case"KeyD":break;case"ShiftLeft":this.player.speed*=2}})),document.addEventListener("keyup",(e=>{switch(e.code){case"KeyW":case"KeyS":this.player.speed=0,t.style.animation="";break;case"KeyA":case"KeyD":this.player.direction=0,t.style.animation="";break;case"ShiftLeft":this.player.speed/=2}}))}setup(){const t=document.querySelector("canvas");t.width=160,t.height=120,this.mapWidth=this.level.map[0].length,this.mapHeight=this.level.map.length,this.initSprites(),this.bindKeys(),this.drawMiniMap(),this.loop(0)}isBlocking(t,e){if(e<0||e>=this.mapHeight||t<0||t>=this.mapWidth)return!0;var i=Math.floor(t),s=Math.floor(e);return 0!=this.level.map[s][i]||!(!y[s][i]||!y[s][i].block)}movePlayer(){const t=this.player.moveSpeed*this.player.speed;this.player.rotation+=this.player.direction*this.player.rotationSpeed;const e=this.player.pos.x+Math.cos(this.player.rotation)*t,i=this.player.pos.y+Math.sin(this.player.rotation)*t;this.isBlocking(e,i)||(this.player.pos.x=e,this.player.pos.y=i,this.player.rotation+=this.player.direction*this.player.rotationSpeed,this.player.rotation<0&&(this.player.rotation+=2*Math.PI),this.player.rotation>=2*Math.PI&&(this.player.rotation-=2*Math.PI))}update(t){this.movePlayer(),this.updateMiniMap(),this.castRays(),v.innerText=`\n      FPS: ${Math.round(1/t)}\n      PLAYER X: ${this.player.pos.x}\n      PLAYER Y: ${this.player.pos.y}\n      DT: ${t}\n    `}loop(t){const e=n-t;n=t,this.update(e),requestAnimationFrame(this.loop.bind(this))}};window.game=M,M.setup()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,